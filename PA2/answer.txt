1) explain how to count bigrams and figure out how many map tasks are launched in the
map stage:

I counted bigrams by adding the following code within the while-loop in the map function.

Added code:

if(itr.hasMoreTokens()){
    bigramCount++; //Keeps a running count of bigrams
 }

In this loop:

while (itr.hasMoreTokens()) {
	word.set(itr.nextToken());
	context.write(word, one);
        wordCount++; //Keeps a running count of how many words
        if(itr.hasMoreTokens()){
        	bigramCount++; //Keeps a running count of bigrams
        	}
           }
word.set("1MapInvoked");
context.write(word, one);

While the iterator goes token by token, I used a boolean to check if there are still neighboring tokens remaining. If there are, it means that there exists a word after the current word and the bigramCount is incremented. If there is only one word in the line or we are on the last word, itr.hasMoreTokens() returns a false and bigram is not incremented. This essentially skips lines with single words. As for how many times "map" has been invoked, I used my previous solution from assignment 1:

word.set("1MapInvoked");
context.write(word, one);

(2) provide your solution to the number of map tasks


(Stored in result.txt inside output folder)

Number of times map is invoked: 
318
Total word count: 
9704
Total bigram count: 
9386





